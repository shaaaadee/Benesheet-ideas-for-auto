const FOLDER_ID = '1mD9HiYizcwVJlzoynubELS2aYevzHneu';
const SHEET_ID = '1y7hANpJD-kRcfy1oC0KfP2vKSJ2Th_sLH5koqf_DqCQ';
const SHEET_NAME = 'Delivery Priority V2'; // Replace with the actual sheet name

function checkFolderUpdates() {
  try {
    Logger.log("Starting folder update check");

    // Access the folder and spreadsheet
    var folder = DriveApp.getFolderById(FOLDER_ID);
    var files = folder.getFiles();
    var sheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME);

    if (!sheet) {
      Logger.log("Sheet with name '" + SHEET_NAME + "' not found.");
      return;
    }

    // Get all data from the sheet
    var data = sheet.getDataRange().getValues();

    // Prepare arrays for batch updates
    var formulas = [];
    var checkboxes = [];
    var dropdowns = [];

    while (files.hasNext()) {
      var file = files.next();
      var fileName = file.getName();
      var url = file.getUrl();
      var companyAndBatch = getCompanyAndBatchFromFileName(fileName);
      Logger.log("Processing file: " + fileName);

      if (companyAndBatch) {
        Logger.log("Extracted company and batch: " + JSON.stringify(companyAndBatch));
        var row = findRowForCompanyAndBatch(data, companyAndBatch.company, companyAndBatch.batch);
        Logger.log("Matching row: " + row);

        if (row !== null) {
          var attachmentFormula = '=HYPERLINK("' + url + '", "' + fileName + '")';
          Logger.log("Preparing to update row: " + row);

          // Store the updates
          formulas.push({ row: row, formula: attachmentFormula });
          checkboxes.push({ row: row, value: true });
          dropdowns.push({ row: row, value: "Collected" });
        }
      } else {
        Logger.log("No valid company and batch extracted from file name: " + fileName);
      }
    }

    // Apply all updates in batch
    applyFormulas(sheet, formulas);
    applyValues(sheet, checkboxes, 'U');
    applyValues(sheet, dropdowns, 'N');

    Logger.log("Folder update check completed");
  } catch (error) {
    Logger.log("Error in checkFolderUpdates: " + error.message);
  }
}

function getCompanyAndBatchFromFileName(fileName) {
  var parts = fileName.match(/(.+?) Batch (\d+) \d+/);
  if (parts && parts.length >= 3) {
    return { company: parts[1].trim(), batch: parseInt(parts[2]) };
  }
  return null;
}

function findRowForCompanyAndBatch(data, company, batch) {
  for (var i = 0; i < data.length; i++) {
    if (data[i][2] == company && data[i][3] == batch) { // Column C (3rd column) and Column D (4th column)
      return i + 1; // Convert to 1-based row index
    }
  }
  return null;
}

function applyFormulas(sheet, formulas) {
  formulas.forEach(function(update) {
    Logger.log("Applying formula to row: " + update.row);
    sheet.getRange('X' + update.row).setFormula(update.formula); // Column X (24th column)
  });
}

function applyValues(sheet, updates, column) {
  updates.forEach(function(update) {
    Logger.log("Applying value to row: " + update.row + ", column: " + column);
    sheet.getRange(column + update.row).setValue(update.value);
  });
}

